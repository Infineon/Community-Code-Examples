/******************************************************************************
* File Name:  rsa.h
*
* Description:  This file provides constants and structures for RSA encryption 
*               in Crypto Sender Application.
*
* Related Document: See Readme.md
*
*******************************************************************************
* (c) 2020, Cypress Semiconductor Corporation. All rights reserved.
*******************************************************************************
* This software, including source code, documentation and related materials
* ("Software"), is owned by Cypress Semiconductor Corporation or one of its
* subsidiaries ("Cypress") and is protected by and subject to worldwide patent
* protection (United States and foreign), United States copyright laws and
* international treaty provisions. Therefore, you may use this Software only
* as provided in the license agreement accompanying the software package from
* which you obtained this Software ("EULA").
*
* If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
* non-transferable license to copy, modify, and compile the Software source
* code solely for use in connection with Cypress's integrated circuit products.
* Any reproduction, modification, translation, compilation, or representation
* of this Software except as specified above is prohibited without the express
* written permission of Cypress.
*
* Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress
* reserves the right to make changes to the Software without notice. Cypress
* does not assume any liability arising out of the application or use of the
* Software or any product or circuit described in the Software. Cypress does
* not authorize its products for use in any products where a malfunction or
* failure of the Cypress product may reasonably be expected to result in
* significant property damage, injury or death ("High Risk Product"). By
* including Cypress's product in a High Risk Product, the manufacturer of such
* system or application assumes all risk of such use and in doing so agrees to
* indemnify Cypress against all liability.
*******************************************************************************/

#ifndef RSA_H_
#define RSA_H_

#include "cy_pdl.h"
#include "cyhal.h"
#include "cybsp.h"

#define RSA_MODULO_LENGTH       2048u
#define RSA_MODULO_DATA_SIZE    (RSA_MODULO_LENGTH / 8)

typedef struct
{
    cy_stc_crypto_rsa_pub_key_t publicKeyStruct;
    uint8_t  moduloData[RSA_MODULO_DATA_SIZE];
    uint8_t  expData   [RSA_MODULO_DATA_SIZE];
    uint8_t  k1Data    [RSA_MODULO_DATA_SIZE+4];
    uint8_t  k2Data    [RSA_MODULO_DATA_SIZE];
    uint8_t  k3Data    [RSA_MODULO_DATA_SIZE];
} cy_stc_public_key_t;

/* All data arrays should be 4-byte aligned */
cy_stc_public_key_t cy_publicKey =
{
    .publicKeyStruct =
    {
        .moduloPtr          = 0,
        .moduloLength       = RSA_MODULO_LENGTH,
        .pubExpPtr          = 0,
        .pubExpLength       = 24,
        .barretCoefPtr      = NULL,
        .inverseModuloPtr   = NULL,
        .rBarPtr            = NULL
    },
    .moduloData =
    {   /* modulus in Little Endian for a public key */
        0xF7u, 0x57u, 0xB3u, 0xD7u, 0xE1u, 0x30u, 0x6Fu, 0x4Au,
        0xE7u, 0x15u, 0x6Bu, 0x79u, 0x62u, 0xE0u, 0x8Cu, 0x7Au,
        0x41u, 0x94u, 0xD5u, 0x8Au, 0x34u, 0x41u, 0x8Au, 0x20u,
        0xA2u, 0xDCu, 0x41u, 0x93u, 0xAFu, 0x2Cu, 0x55u, 0xDAu,
        0xFAu, 0x42u, 0x14u, 0x59u, 0xB9u, 0xACu, 0x38u, 0xD4u,
        0x62u, 0xA2u, 0x21u, 0x40u, 0x44u, 0x88u, 0xFBu, 0x8Du,
        0xB0u, 0x13u, 0x32u, 0xAAu, 0x04u, 0x4Du, 0x9Au, 0xB7u,
        0x45u, 0xDAu, 0x23u, 0x88u, 0x03u, 0x63u, 0xD6u, 0xACu,
        0x52u, 0xEDu, 0xD1u, 0xA4u, 0x26u, 0x49u, 0x81u, 0xE8u,
        0xD8u, 0x01u, 0x25u, 0x56u, 0x98u, 0x59u, 0x43u, 0x5Fu,
        0xE7u, 0x65u, 0xDAu, 0x4Cu, 0xAEu, 0x38u, 0xA4u, 0x8Bu,
        0x23u, 0xF4u, 0xCCu, 0xF5u, 0xBDu, 0x7Fu, 0x58u, 0x1Fu,
        0xE7u, 0x78u, 0xACu, 0xC5u, 0x56u, 0x7Eu, 0xA1u, 0xFAu,
        0x0Eu, 0x7Eu, 0xC7u, 0xD2u, 0xE9u, 0x03u, 0x39u, 0x9Eu,
        0x6Du, 0x27u, 0x13u, 0x17u, 0x5Au, 0x2Bu, 0x81u, 0x5Du,
        0xC8u, 0x3Cu, 0x77u, 0x45u, 0x51u, 0x6Bu, 0x72u, 0x44u,
        0x66u, 0xB2u, 0xA8u, 0x86u, 0x83u, 0xDAu, 0x63u, 0x6Eu,
        0xB1u, 0xCDu, 0xA7u, 0xABu, 0x21u, 0x46u, 0x51u, 0x53u,
        0xCBu, 0xA7u, 0x4Du, 0x10u, 0x14u, 0x58u, 0x7Bu, 0xCAu,
        0xF8u, 0x60u, 0xBCu, 0x6Du, 0x4Fu, 0xC0u, 0xAAu, 0x9Au,
        0x39u, 0x2Eu, 0x8Du, 0xBAu, 0xCAu, 0x78u, 0xA6u, 0xF6u,
        0xEBu, 0x13u, 0x17u, 0xBAu, 0xC3u, 0x18u, 0xFBu, 0xC4u,
        0xEDu, 0x14u, 0x6Bu, 0xFCu, 0x25u, 0x15u, 0xFEu, 0xE8u,
        0x76u, 0x85u, 0xCBu, 0x08u, 0xBEu, 0x61u, 0x48u, 0xEFu,
        0x53u, 0xF1u, 0x76u, 0xE5u, 0x22u, 0x9Fu, 0x8Au, 0x80u,
        0xC9u, 0x95u, 0x10u, 0x7Fu, 0xE5u, 0xE1u, 0x19u, 0x4Bu,
        0x83u, 0x04u, 0x16u, 0x0Fu, 0x67u, 0x91u, 0x21u, 0x70u,
        0x35u, 0x56u, 0x02u, 0x91u, 0x66u, 0x93u, 0x08u, 0x26u,
        0xF4u, 0x2Bu, 0x33u, 0x09u, 0xE3u, 0xE6u, 0x5Bu, 0x25u,
        0x22u, 0x3Du, 0xE3u, 0xD4u, 0xBDu, 0x6Cu, 0xDAu, 0xD2u,
        0xC1u, 0xDDu, 0x49u, 0x59u, 0x92u, 0xFDu, 0xD5u, 0x88u,
        0xF5u, 0xD2u, 0x81u, 0xC3u, 0x90u, 0x1Au, 0x6Bu, 0xCBu,
    },
    .expData =
    {
        /* Little endian exponent for a public key */
        0x01u, 0x00u, 0x01u, 0x00u,
    },
    .k1Data  =
    {
        /* Little endian barret coefficient for a public key */
        0x83u, 0xE5u, 0x40u, 0x4Eu, 0x3Bu, 0x09u, 0x9Au, 0x7Cu,
        0x77u, 0xF5u, 0x9Du, 0xC7u, 0x3Du, 0xBEu, 0x98u, 0x43u,
        0x8Eu, 0x63u, 0xE3u, 0x92u, 0x93u, 0xDCu, 0x07u, 0x11u,
        0xB0u, 0xDAu, 0x44u, 0x2Du, 0xB2u, 0x03u, 0x86u, 0xE5u,
        0x1Cu, 0x9Du, 0xB8u, 0xFFu, 0x7Du, 0x1Au, 0xC8u, 0xB3u,
        0x67u, 0xC3u, 0x7Eu, 0x0Fu, 0xAFu, 0x96u, 0x64u, 0xACu,
        0xE0u, 0xE0u, 0x37u, 0x89u, 0x54u, 0xA3u, 0x32u, 0x0Fu,
        0xD6u, 0xAAu, 0x2Bu, 0x09u, 0x8Bu, 0xAAu, 0xD6u, 0x8Bu,
        0x19u, 0x7Bu, 0x61u, 0x70u, 0xD8u, 0xCDu, 0x2Bu, 0x6Eu,
        0x57u, 0xDAu, 0x2Du, 0x56u, 0x80u, 0xBFu, 0x78u, 0x97u,
        0x58u, 0x8Bu, 0x23u, 0xD6u, 0xB7u, 0xDFu, 0xBEu, 0x00u,
        0xF8u, 0x4Au, 0xCEu, 0xDBu, 0x11u, 0xF7u, 0xADu, 0x8Eu,
        0x90u, 0xD0u, 0xF9u, 0x2Au, 0x4Fu, 0xECu, 0x40u, 0x61u,
        0xE0u, 0x11u, 0x92u, 0x6Du, 0x91u, 0x17u, 0x6Fu, 0xDBu,
        0x31u, 0xA4u, 0xAAu, 0xD4u, 0xECu, 0xAEu, 0xD6u, 0x15u,
        0xDCu, 0x5Au, 0x98u, 0xAFu, 0xC2u, 0x77u, 0x91u, 0x53u,
        0x74u, 0x39u, 0x25u, 0xD3u, 0x42u, 0x1Fu, 0x7Au, 0xE6u,
        0x81u, 0xA9u, 0x99u, 0x72u, 0x7Bu, 0x75u, 0xA9u, 0x29u,
        0x91u, 0xB2u, 0xE9u, 0x06u, 0xE9u, 0xDAu, 0x7Cu, 0xB6u,
        0xB2u, 0xC3u, 0x61u, 0xC9u, 0xFFu, 0x53u, 0x43u, 0x05u,
        0xACu, 0x68u, 0x68u, 0x05u, 0xBFu, 0x93u, 0xDFu, 0xF2u,
        0x35u, 0x53u, 0x86u, 0x16u, 0xE0u, 0x93u, 0xD1u, 0xE5u,
        0xDDu, 0xEAu, 0xE8u, 0x0Eu, 0xBAu, 0x88u, 0x92u, 0x43u,
        0xDAu, 0x27u, 0xC7u, 0xA2u, 0x27u, 0x2Au, 0x53u, 0x30u,
        0xF9u, 0xA1u, 0xB1u, 0xFDu, 0x1Du, 0x00u, 0xC5u, 0x77u,
        0xCEu, 0xDAu, 0xB8u, 0xF2u, 0xE4u, 0xB5u, 0x83u, 0x44u,
        0x90u, 0xB6u, 0x27u, 0xEAu, 0x7Fu, 0xCBu, 0x96u, 0x12u,
        0x78u, 0x87u, 0x76u, 0xC9u, 0x17u, 0x48u, 0x74u, 0x03u,
        0xE6u, 0x97u, 0x62u, 0xEEu, 0x53u, 0xB0u, 0x54u, 0x97u,
        0x5Au, 0xEEu, 0x83u, 0x8Du, 0x8Fu, 0xB5u, 0xE9u, 0xFEu,
        0x1Du, 0x03u, 0x6Au, 0xFBu, 0xC4u, 0x12u, 0xFCu, 0x15u,
        0x3Eu, 0xD0u, 0x32u, 0x4Bu, 0x6Bu, 0x67u, 0x2Cu, 0x42u,
        0x01u, 0x00u, 0x00u, 0x00u,
    },
    .k2Data  =
    {
        /* Little endian inverse modulo coefficient for a public key */
        0x39u, 0x66u, 0xE3u, 0x9Cu, 0xFCu, 0xABu, 0x5Cu, 0x2Du,
        0x51u, 0x84u, 0x5Eu, 0x36u, 0x84u, 0x16u, 0xCCu, 0xCCu,
        0x92u, 0x41u, 0x7Fu, 0x82u, 0xB2u, 0x69u, 0x07u, 0x00u,
        0x34u, 0x05u, 0x56u, 0xBFu, 0x54u, 0x8Fu, 0x1Bu, 0x76u,
        0xABu, 0xAFu, 0x38u, 0x19u, 0x5Au, 0x0Eu, 0x69u, 0x9Du,
        0x1Fu, 0x09u, 0x01u, 0x31u, 0x19u, 0xF9u, 0x25u, 0x06u,
        0xD4u, 0xD6u, 0x2Fu, 0x5Du, 0x56u, 0x6Eu, 0xF5u, 0xA3u,
        0x41u, 0xE1u, 0x57u, 0xF6u, 0xCBu, 0xD4u, 0x74u, 0x76u,
        0xCBu, 0xDAu, 0xF2u, 0xA3u, 0x75u, 0xC5u, 0x55u, 0x6Cu,
        0xA0u, 0x17u, 0x24u, 0xE2u, 0x3Au, 0x3Eu, 0xBEu, 0x14u,
        0xFFu, 0x90u, 0x79u, 0xBEu, 0x1Cu, 0xE2u, 0x17u, 0xDFu,
        0xF2u, 0x2Au, 0xB3u, 0x87u, 0xE6u, 0x1Bu, 0x54u, 0x51u,
        0x4Eu, 0x2Fu, 0x4Fu, 0xD0u, 0x76u, 0xD9u, 0x80u, 0x0Fu,
        0x68u, 0xE5u, 0x55u, 0x20u, 0x02u, 0xD4u, 0xADu, 0x3Cu,
        0xC5u, 0x8Au, 0x39u, 0x1Du, 0xE3u, 0x16u, 0xB6u, 0xEBu,
        0x4Bu, 0xFAu, 0x0Cu, 0xADu, 0x42u, 0xBDu, 0x56u, 0x06u,
        0x4Cu, 0xA6u, 0xEDu, 0x35u, 0xEBu, 0xBBu, 0x67u, 0x5Fu,
        0x98u, 0xFFu, 0x9Bu, 0x14u, 0x67u, 0x6Au, 0x26u, 0x50u,
        0x30u, 0xC5u, 0x6Au, 0xC7u, 0x8Au, 0x1Du, 0xF1u, 0x15u,
        0x5Du, 0x90u, 0xFAu, 0xC0u, 0x36u, 0x86u, 0xA8u, 0xC1u,
        0x0Au, 0x0Fu, 0x84u, 0x64u, 0xACu, 0x70u, 0xDDu, 0x0Bu,
        0x72u, 0xA3u, 0x8Fu, 0x46u, 0x5Au, 0x22u, 0xBEu, 0xBAu,
        0x16u, 0x2Cu, 0xE6u, 0xD8u, 0x58u, 0x5Fu, 0x0Du, 0xEEu,
        0xCFu, 0x00u, 0x9Du, 0x07u, 0x5Eu, 0xA3u, 0x33u, 0xDFu,
        0x88u, 0xA5u, 0x74u, 0x56u, 0x48u, 0x14u, 0xE3u, 0xAFu,
        0x6Du, 0x1Cu, 0xCCu, 0x17u, 0x4Cu, 0xE0u, 0xD2u, 0xA3u,
        0x66u, 0xF2u, 0x2Du, 0xD9u, 0xD4u, 0xB6u, 0xEEu, 0xFDu,
        0x1Cu, 0x87u, 0xC3u, 0x3Fu, 0xDCu, 0x89u, 0xC2u, 0xC4u,
        0xF3u, 0x63u, 0xD1u, 0x65u, 0x45u, 0x46u, 0xABu, 0x13u,
        0xBBu, 0x05u, 0xFFu, 0x42u, 0x60u, 0x59u, 0x06u, 0x94u,
        0xB7u, 0xE2u, 0xC6u, 0xC0u, 0x76u, 0x59u, 0xEFu, 0x58u,
        0x98u, 0xACu, 0x0Cu, 0xAAu, 0xB1u, 0xA1u, 0xB8u, 0x63u,
    },
    .k3Data  =
    {
        /* Little endian rBar coefficient for a public key */
        0x09u, 0xA8u, 0x4Cu, 0x28u, 0x1Eu, 0xCFu, 0x90u, 0xB5u,
        0x18u, 0xEAu, 0x94u, 0x86u, 0x9Du, 0x1Fu, 0x73u, 0x85u,
        0xBEu, 0x6Bu, 0x2Au, 0x75u, 0xCBu, 0xBEu, 0x75u, 0xDFu,
        0x5Du, 0x23u, 0xBEu, 0x6Cu, 0x50u, 0xD3u, 0xAAu, 0x25u,
        0x05u, 0xBDu, 0xEBu, 0xA6u, 0x46u, 0x53u, 0xC7u, 0x2Bu,
        0x9Du, 0x5Du, 0xDEu, 0xBFu, 0xBBu, 0x77u, 0x04u, 0x72u,
        0x4Fu, 0xECu, 0xCDu, 0x55u, 0xFBu, 0xB2u, 0x65u, 0x48u,
        0xBAu, 0x25u, 0xDCu, 0x77u, 0xFCu, 0x9Cu, 0x29u, 0x53u,
        0xADu, 0x12u, 0x2Eu, 0x5Bu, 0xD9u, 0xB6u, 0x7Eu, 0x17u,
        0x27u, 0xFEu, 0xDAu, 0xA9u, 0x67u, 0xA6u, 0xBCu, 0xA0u,
        0x18u, 0x9Au, 0x25u, 0xB3u, 0x51u, 0xC7u, 0x5Bu, 0x74u,
        0xDCu, 0x0Bu, 0x33u, 0x0Au, 0x42u, 0x80u, 0xA7u, 0xE0u,
        0x18u, 0x87u, 0x53u, 0x3Au, 0xA9u, 0x81u, 0x5Eu, 0x05u,
        0xF1u, 0x81u, 0x38u, 0x2Du, 0x16u, 0xFCu, 0xC6u, 0x61u,
        0x92u, 0xD8u, 0xECu, 0xE8u, 0xA5u, 0xD4u, 0x7Eu, 0xA2u,
        0x37u, 0xC3u, 0x88u, 0xBAu, 0xAEu, 0x94u, 0x8Du, 0xBBu,
        0x99u, 0x4Du, 0x57u, 0x79u, 0x7Cu, 0x25u, 0x9Cu, 0x91u,
        0x4Eu, 0x32u, 0x58u, 0x54u, 0xDEu, 0xB9u, 0xAEu, 0xACu,
        0x34u, 0x58u, 0xB2u, 0xEFu, 0xEBu, 0xA7u, 0x84u, 0x35u,
        0x07u, 0x9Fu, 0x43u, 0x92u, 0xB0u, 0x3Fu, 0x55u, 0x65u,
        0xC6u, 0xD1u, 0x72u, 0x45u, 0x35u, 0x87u, 0x59u, 0x09u,
        0x14u, 0xECu, 0xE8u, 0x45u, 0x3Cu, 0xE7u, 0x04u, 0x3Bu,
        0x12u, 0xEBu, 0x94u, 0x03u, 0xDAu, 0xEAu, 0x01u, 0x17u,
        0x89u, 0x7Au, 0x34u, 0xF7u, 0x41u, 0x9Eu, 0xB7u, 0x10u,
        0xACu, 0x0Eu, 0x89u, 0x1Au, 0xDDu, 0x60u, 0x75u, 0x7Fu,
        0x36u, 0x6Au, 0xEFu, 0x80u, 0x1Au, 0x1Eu, 0xE6u, 0xB4u,
        0x7Cu, 0xFBu, 0xE9u, 0xF0u, 0x98u, 0x6Eu, 0xDEu, 0x8Fu,
        0xCAu, 0xA9u, 0xFDu, 0x6Eu, 0x99u, 0x6Cu, 0xF7u, 0xD9u,
        0x0Bu, 0xD4u, 0xCCu, 0xF6u, 0x1Cu, 0x19u, 0xA4u, 0xDAu,
        0xDDu, 0xC2u, 0x1Cu, 0x2Bu, 0x42u, 0x93u, 0x25u, 0x2Du,
        0x3Eu, 0x22u, 0xB6u, 0xA6u, 0x6Du, 0x02u, 0x2Au, 0x77u,
        0x0Au, 0x2Du, 0x7Eu, 0x3Cu, 0x6Fu, 0xE5u, 0x94u, 0x34u,
    },
};

#endif /* RSA_H_ */
